# Test description:
#   Check that tracks get rebuilt when a subscriber disconnects and reconnects.
#
# Test architecture:
#
# 1. Check that the subscriber receives the data sent by the publisher.
#
# ┌───────────────────┐             ┌────────────────────┐
# │  Domain 80        │             │         Domain 81  │
# │ ┌──────────────┐ ┌┼─────────────┼┐ ┌───────────────┐ │
# │ │publisher_0_t0│ ││  ddsproxy  ││ │subscriber_t0_1│ │
# │ │            ──┼─┼┤►           ─┼┼─┤►              │ │
# │ │(local)       │ ││  (local)    ││ │(local)        │ │
# │ └──────────────┘ └┼─────────────┼┘ └───────────────┘ │
# │                   │             │                    │
# └───────────────────┘             └────────────────────┘
#
# 2. Disconnect the subscriber.
#
# ┌───────────────────┐             ┌────────────────────┐
# │  Domain 80        │             │         Domain 81  │
# │ ┌──────────────┐ ┌┼─────────────┼┐                   │
# │ │publisher_0_t0│ ││  ddsproxy  ││                   │
# │ │              │ ││             ││                   │
# │ │(local)       │ ││  (local)    ││                   │
# │ └──────────────┘ └┼─────────────┼┘                   │
# │                   │             │                    │
# └───────────────────┘             └────────────────────┘
#
# 3. Check that when the subscriber is reactivated, it receives the data sent by the publisher.
#
# ┌───────────────────┐             ┌────────────────────┐
# │  Domain 80        │             │         Domain 81  │
# │ ┌──────────────┐ ┌┼─────────────┼┐ ┌───────────────┐ │
# │ │publisher_0_t0│ ││  ddsproxy  ││ │subscriber_t0_2│ │
# │ │            ──┼─┼┤►           ─┼┼─┤►              │ │
# │ │(local)       │ ││  (local)    ││ │(local)        │ │
# │ └──────────────┘ └┼─────────────┼┘ └───────────────┘ │
# │                   │             │                    │
# └───────────────────┘             └────────────────────┘

services:

  # ROUTER
  ddsproxy:
    image: ${DDSPROXY_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsproxy
    networks:
      - std_net
    volumes:
      - ./ddsproxy.yaml:/config.yaml
    command: ddsproxy -c /config.yaml --timeout 12


  # DOMAIN 80
  publisher_0_t0:
    image: ${DDSPROXY_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: publisher_0_t0
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample publisher --samples 110 --domain 80 --topic topic0 --interval 100


  # DOMAIN 81
  subscriber_t0_1:
    image: ${DDSPROXY_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_t0_1
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample --samples 20 --timeout 3 --args "--samples 20 --domain 81 --topic topic0"

  subscriber_t0_2:
    image: ${DDSPROXY_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: subscriber_t0_2
    networks:
      - std_net
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_subscriber.py --exe install/AdvancedConfigurationExample/examples/cpp/dds/AdvancedConfigurationExample/AdvancedConfigurationExample --samples 20 --timeout 6 --delay 4 --args "--samples 20 --domain 81 --topic topic0"

networks:
  std_net:
  default:
    driver: none
