# Test description:
#   This test checks the UDP functionality by creating 4 routers, 2 edges and 2 cloud.
#   The cloud router will forward every message from 1 to 2 by two different participants connected by UDP.
#   It also probes the Initial Peers functionality, avoiding the discovery of edge routers with those routers that
#    that are not the one suppose to connect with.
#
# Test architecture:
#
#          ┌────────────────────────────────────────────────────────────────┐
#          │ cloud_edge_net                                                 │
#          │                                                                │
#          │                        ┌──────────────────┐                    │
#          │                        │ ddsproxy_cloud  │                    │
#          │                        │ (wan + wan)      │                    │
#          │                        └─▲──────────────▲─┘                    │
#          │                          │              │                      │
#          │           ┌──────────────┘              └─────────┐            │
#   ┌──────┼───────────┼──────────────────┐        ┌───────────┼────────────┼──────────────┐
#   │      │           │                  │        │           │            │              │
#   │      │ ┌─────────▼────────┐         │        │   ┌───────▼──────────┐ │              │
#   │      │ │ ddsproxy_edge_1 │         │        │   │ ddsproxy_edge_2 │─┼────┐         │
#   │      │ │ (local + wan)    │         │        │   │ (local + wan)    │ │    │         │
#   │      │ └───────┬────▲─────┘         │        │   └───────┬──────────┘ │    │         │
#   │      │         │    │               │        │           │            │    │         │
#   │      └─────────┼────┼───────────────┼────────┼───────────┼────────────┘    │         │
#   │                │    │               │        │           │                 │         │
#   │  ┌─────────────▼┐  ┌┴────────────┐  │        │    ┌──────▼───────┐  ┌──────▼───────┐ │
#   │  │  cli_edge_1  │  │ ser_edge_1  │  │        │    │  cli_edge_2  │  │  cli_edge_3  │ │
#   │  │   (client)   │  │  (server)   │  │        │    │   (client)   │  │(client async)│ │
#   │  └──────────────┘  └─────────────┘  │        │    └──────────────┘  └──────────────┘ │
#   │                                     │        │                                       │
#   │ edge_1_net (domain 1)               │        │                 edge_2_net (domain 2) │
#   └─────────────────────────────────────┘        └───────────────────────────────────────┘

services:

  ddsproxy_cloud:
    image: ${DDSPROXY_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsproxy_cloud
    networks:
      - cloud_edge_net
    volumes:
      - ./ddsproxy_cloud.yaml:/config.yaml
    command: ddsproxy -c /config.yaml --timeout 15

  ddsproxy_edge_1:
    image: ${DDSPROXY_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsproxy_edge_1
    depends_on:
      - ddsproxy_cloud
    networks:
      - cloud_edge_net
      - edge_1_net
    volumes:
      - ./ddsproxy_edge_1.yaml:/config.yaml
    command: ddsproxy -c /config.yaml --timeout 15

  ser_edge_1:
    image: ${DDSPROXY_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: ser_edge_1
    depends_on:
      - ddsproxy_edge_1
    networks:
      - edge_1_net
    environment:
      - ROS_DOMAIN_ID=1
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_server.py --samples 30 --timeout 15

  cli_edge_1:
    image: ${DDSPROXY_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: cli_edge_1
    depends_on:
      - ddsproxy_edge_1
    networks:
      - edge_1_net
    environment:
      - ROS_DOMAIN_ID=1
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_client.py --samples 10 --timeout 15

  ddsproxy_edge_2:
    image: ${DDSPROXY_COMPOSE_TEST_DOCKER_IMAGE}
    container_name: ddsproxy_edge_2
    depends_on:
      - ddsproxy_cloud
    networks:
      - cloud_edge_net
      - edge_2_net
    volumes:
      - ./ddsproxy_edge_2.yaml:/config.yaml
    command: ddsproxy -c /config.yaml --timeout 15

  cli_edge_2:
    image: ${DDSPROXY_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: cli_edge_2
    depends_on:
      - ddsproxy_edge_2
    networks:
      - edge_2_net
    environment:
      - ROS_DOMAIN_ID=2
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_client.py --samples 10 --timeout 15

  cli_edge_3:
    image: ${DDSPROXY_COMPOSE_TEST_ROS2_DOCKER_IMAGE}
    container_name: cli_edge_3
    depends_on:
      - ddsproxy_edge_2
    networks:
      - edge_2_net
    environment:
      - ROS_DOMAIN_ID=2
    volumes:
      - ../../../scripts:/scripts
    command: python3 /scripts/execute_and_validate_client.py --samples 10 --timeout 15

networks:
  edge_1_net:
  edge_2_net:
  cloud_edge_net:
  default:
    driver: none
